@page "/giohang"
@using Web_DongHo_WebAssembly.Data
@using Newtonsoft.Json
@inject HttpClient Http
@inject AuthState Auth
@inject NavigationManager Navigation
@inject IJSRuntime JS

<div class="my-5">
    <main class="my-5">
        <div class="card">
            <div class="row">
                <div class="col-md-8 cart">
                    <div class="title">
                        <div class="row">
                            <h4><b>Giỏ Hàng</b></h4>
                        </div>
                    </div>
                    <div class="row border-bottom">
                        <div class="row main align-items-center">
                            <div class="col-2 text-dark mx-3" style="max-width:fit-content;">Ảnh</div>
                            <div class="col me-3" style="max-width:fit-content;">
                                <div class="text-dark">Sản phẩm</div>
                            </div>
                            <div class="col mx-4" style="max-width:fit-content;">
                                <div class="text-dark">Số lượng</div>
                            </div>
                            <div class="col ms-5" style="max-width:fit-content;">
                                <div class="text-dark">Giá</div>
                            </div>
                        </div>
                    </div>
                    @if (cart != null)
                    {
                        @foreach (var item in cart.BillDetails)
                        {
                            <div class="row border-top border-bottom">
                                <div class="row main align-items-center">
                                    <div class="col-2"><img class="imgCart img-fluid" src="images/Product/@item.Product.ProductImages"></div>
                                    <div class="col">
                                        <div class="row text-muted">@item.Product.ProductName</div>
                                    </div>
                                    <div class="col productCount">
                                        <a class="btn border-0 px-0" @onclick="() => ChangeProductQuantity(item.Id, -1)">-</a>
                                        <a class="border border-0">@item.Quantity</a>
                                        <a class="btn border-0 px-0" @onclick="() => ChangeProductQuantity(item.Id, 1)">+</a>
                                    </div>
                                    <div class="col">@item.Product.ProductPrice.ToString("N0") ₫</div>
                                    <div class="col"><a class="btn border border-0" @onclick="() => RemoveProductFromCart(item.Id)">Xóa</a></div>
                                </div>
                            </div>
                        }
                    }
                </div>
                <div class="col-md-4 summary">
                    <div>
                        <h5><b>Tổng kết</b></h5>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col text-center" style="padding-left:0;">Tổng @cart?.BillDetails.Count sản phẩm</div>
                    </div>
                    <form class="formCart">
                        <p>Vận chuyển</p>
                        <select>
                            <option class="text-muted">Vận chuyển chậm- 15.000 ₫</option>
                            <option class="text-muted">Vận chuyển nhanh- 25.000 ₫</option>
                        </select>
                        <p>Mã khuyến mãi</p>
                        <input class="input" id="code" placeholder="Nhập mã khuyến mãi">
                    </form>
                    <div class="row" style="border-top: 1px solid rgba(0,0,0,.1); padding: 2vh 0;">
                        <div class="col">Tổng giá:</div>
                        <div class="col text-right">@cart?.BillDetails.Sum(b => b.Product.ProductPrice * b.Quantity).ToString("N0") ₫</div>
                    </div>
                    <a class="btn btnCart" href="/thanhtoan">Đặt hàng</a>
                </div>
            </div>
        </div>
    </main>
</div>

@code {
    private Bill cart;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var username = Auth.Username;
            if (username != null)
            {
                var response = await Http.GetAsync($"api/cart/getCart?username={username}");

                if (response.IsSuccessStatusCode)
                {
                    var responseContent = await response.Content.ReadAsStringAsync();
                    cart = JsonConvert.DeserializeObject<Bill>(responseContent);
                    if (cart == null)
                    {
                        await JS.InvokeVoidAsync("alert", "Bạn chưa có sản phẩm nào trong giỏ hàng");
                    }
                }
                else if (response.StatusCode == System.Net.HttpStatusCode.NoContent)
                {
                    await JS.InvokeVoidAsync("alert", "Bạn chưa có sản phẩm nào trong giỏ hàng");
                }
                else
                {
                    var errorMessage = await response.Content.ReadAsStringAsync();
                    await JS.InvokeVoidAsync("alert", $"Error: {errorMessage}");
                }
            }
            else
            {
                Navigation.NavigateTo("/");
            }
        }
        catch (Exception ex)
        {
            await JS.InvokeVoidAsync("alert", $"An error occurred: {ex.Message}");
        }
    }

    private async Task RemoveProductFromCart(int billDetailId)
    {
        try
        {
            var response = await Http.PostAsJsonAsync($"api/cart/removeProduct/{billDetailId}", new { });

            if (response.IsSuccessStatusCode)
            {
                await OnInitializedAsync();
            }
            else
            {
                var errorMessage = await response.Content.ReadAsStringAsync();
                await JS.InvokeVoidAsync("alert", $"Error: {errorMessage}");
            }
        }
        catch (Exception ex)
        {
            await JS.InvokeVoidAsync("alert", $"An error occurred: {ex.Message}");
        }
    }

    private async Task ChangeProductQuantity(int billDetailId, int change)
    {
        try
        {
            var response = await Http.PostAsJsonAsync($"api/cart/changeProductQuantity?billDetailId={billDetailId}", change);

            if (response.IsSuccessStatusCode)
            {
                await OnInitializedAsync();
            }
            else
            {
                var errorMessage = await response.Content.ReadAsStringAsync();
                await JS.InvokeVoidAsync("alert", $"Error: {errorMessage}");
            }
        }
        catch (Exception ex)
        {
            await JS.InvokeVoidAsync("alert", $"An error occurred: {ex.Message}");
        }
    }
}
<style>

    .disable-link {
        pointer-events: none;
        color: white;
        cursor: not-allowed;
        background-color: gray;
        opacity: 0.7;
    }

    html {
        position: relative;
        min-height: 100%;
        overflow-x: hidden;
    }

    body {
        background: border-box;
    }

    .nav-home {
        color: #333;
        text-decoration: none;
        font-weight: 500;
        display: inline-block;
        position: relative;
    }

        .nav-home:after {
            background: none repeat scroll 0 0 transparent;
            bottom: 0;
            content: "";
            display: block;
            height: 2px;
            left: 50%;
            position: absolute;
            background: #333;
            transition: width 0.4s ease 0s, left 0.4s ease 0s;
            width: 0;
        }

        .nav-home:hover:after {
            width: 100%;
            left: 0;
        }

    .card {
        margin: auto;
        max-width: 950px;
        width: 90%;
        box-shadow: 0 6px 20px 0 rgba(0, 0, 0, 0.19);
        border-radius: 1rem;
        border: transparent;
    }

    .cart {
        background-color: #fff;
        padding: 4vh 5vh;
        border-bottom-left-radius: 1rem;
        border-top-left-radius: 1rem;
    }

    .summary {
        background-color: #393939;
        border-top-right-radius: 1rem;
        border-bottom-right-radius: 1rem;
        padding: 4vh;
        color: white;
        font-weight: 700;
    }

        .summary .col-2 {
            padding: 0;
        }

        .summary .col-10 {
            padding: 0;
        }

    .row {
        margin: 0;
    }

    .title b {
        font-size: 1.5rem;
    }

    .main {
        margin: 0;
        padding: 2vh 0;
        width: 100%;
    }

    .col-2,
    .col {
        padding: 0 1vh;
    }

    a {
        padding: 0 1vh;
    }

    .close {
        margin-left: auto;
        font-size: 0.7rem;
    }

    .imgCart {
        width: 3.5rem;
    }

    .back-to-shop {
        margin-top: 4.5rem;
    }

    h5 {
        margin-top: 4vh;
    }

    hr {
        margin-top: 1.25rem;
    }

    .formCart {
        padding: 2vh 0;
    }

    select {
        border: 1px solid rgba(0, 0, 0, 0.137);
        padding: 1.5vh 1vh;
        margin-bottom: 4vh;
        outline: none;
        width: 100%;
        background-color: rgb(247, 247, 247);
        color: #757575;
        font-weight: 700;
    }

    .input {
        border: 1px solid rgba(0, 0, 0, 0.137);
        padding: 1vh;
        margin-bottom: 4vh;
        outline: none;
        width: 100%;
        background-color: rgb(247, 247, 247);
        font-weight: 700;
    }

        .input:focus::-webkit-input-placeholder {
            color: transparent;
        }

    .btnCart {
        background-color: #8b8b8b;
        border-color: #000;
        color: white;
        width: 100%;
        font-size: 18px;
        margin-top: 4vh;
        padding: 1vh;
        border-radius: 0;
        font-weight: 700;
    }

        .btnCart:focus {
            box-shadow: none;
            outline: none;
            box-shadow: none;
            color: white;
            -webkit-box-shadow: none;
            transition: none;
        }

        .btnCart:hover {
            color: white;
            background-color: #393939;
        }

    .aCart {
        color: black;
    }

        .aCart:hover {
            color: black;
            text-decoration: none;
        }

    #code {
        background-image: linear-gradient(to left, rgba(255, 255, 255, 0.253), rgba(255, 255, 255, 0.185)), url("https://img.icons8.com/small/16/000000/long-arrow-right.png");
        background-repeat: no-repeat;
        background-position-x: 95%;
        background-position-y: center;
    }

    .productCount a {
        text-align: center;
        text-decoration: none;
        color: black;
    }
</style>