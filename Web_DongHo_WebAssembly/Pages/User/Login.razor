@page "/login"
@using Web_DongHo_WebAssembly.Data
@inject HttpClient http
@inject NavigationManager Navigation
@inject IJSRuntime JS
@layout EmptyLayout
<head>
    <style>
        body {
            font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f4;
            background-image: url(/images/background-login.jpg);
            background-size: cover;
            background-position: center;
        }



        .container {
            width: 700px;
            margin: 50px auto;
            background-color: #fff;
            padding: 30px;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
            border-radius: 15px;
        }

        h1 {
            text-align: center;
            color: #333;
            margin-bottom: 20px;
        }

        p {
            text-align: center;
            color: #666;
        }

        .input-group {
            margin-bottom: 15px;
        }

        label {
            display: block;
            margin-bottom: 5px;
            color: #333;
        }

        input[type="email"],
        input[type="password"] {
            width: 100%;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }

        button[type="submit"] {
            background-color: #333;
            color: #fff;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease, transform 0.3s ease;
        }

            button[type="submit"]:hover {
                background-color: #555;
                transform: scale(1.05);
            }

        .login {
            background-color: #333;
            color: white;
            padding: 10px 20px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            margin: 4px 2px;
            cursor: pointer;
            border: none;
            border-radius: 4px;
            transition: background-color 0.3s, transform 0.3s;
        }

            .login:hover {
                background-color: #555;
                transform: scale(1.05);
            }

        .container .backHome {
            color: #333;
            text-decoration: none;
            font-weight: 500;
            display: inline-block;
            position: relative;
        }

            .container .backHome:after {
                background: none repeat scroll 0 0 transparent;
                bottom: 0;
                content: "";
                display: block;
                height: 2px;
                left: 50%;
                position: absolute;
                background: #333;
                transition: width 0.4s ease 0s, left 0.4s ease 0s;
                width: 0;
            }

            .container .backHome:hover:after {
                width: 100%;
                left: 0;
            }
    </style>

</head>
<div>
    <a class="backHome" style="color:black" href="/"> <i class="fa-solid fa-house"></i> Trở về trang chủ</a>
</div>
<h1>Đăng nhập</h1>
<SocialLogin />

<form @onsubmit="HandleLogin">
    <div class="input-group">
        <label for="UserName">Username:</label>
        <div class="input-group mb-3">
            <input @bind="loginModel.UserName" type="text" class="form-control rounded-4" id="UserName" required autocomplete="off">
        </div>
    </div>
    <div class="input-group">
        <label for="password">Mật khẩu:</label>
        <div class="input-group mb-3">
            <input @bind="loginModel.Password" type="password" class="form-control rounded-4" id="Password" required autocomplete="off">
        </div>
    </div>
    <button class="login" type="submit">Đăng Nhập</button>
    <a class="login" href="/register">Đăng Ký</a>
</form>


@code {
    private UserLoginRequest loginModel = new UserLoginRequest();

    private async Task HandleLogin()
    {
        var response = await http.PostAsJsonAsync("api/account/login", loginModel);
        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<Login_RegistrationResponse>();
            if (result != null)
            {
                // Store the JWT token in local storage
                await JS.InvokeVoidAsync("localStorage.setItem", "authToken", result.Token);

                // Navigate to the home page or another protected page
                Navigation.NavigateTo("/");
            }
        }
        else
        {
            // Handle login failure (e.g., show an error message)
        }
    }
    public class UserLoginRequest
    {
        public string UserName { get; set; }
        public string Email { get; set; }
        public string Password { get; set; }
        public int? RoleId { get; set; }

    }
    public class Login_RegistrationResponse
    {
        public string Token { get; set; }
        public string UserName { get; set; }
        public int RoleId { get; set; }
    }
}
