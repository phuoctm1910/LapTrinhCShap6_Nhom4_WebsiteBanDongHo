@page "/change-password"
@using System.Net.Http.Headers;
@inject HttpClient http
@inject NavigationManager Navigation
@inject IJSRuntime JS
@inject AuthState Auth
@layout EmptyLayout
<style>
    body {
        font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f4f4f4;
        background-image: url(../../images/background-login.jpg);
        background-size: cover;
        background-position: center;
    }

    .container {
        width: 700px;
        margin: 50px auto;
        background-color: #fff;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
        border-radius: 15px;
        background-color: white; /* Ensure the form background is white */
    }

    h1 {
        text-align: center;
        color: #333;
        padding-top: 35px;
    }

    p {
        text-align: center;
        color: #666;
    }

    .input-group {
        margin-bottom: 15px;
    }

    input {
        width: 500px !important;
    }

    label {
        display: block;
        margin-bottom: 5px;
        color: #333;
    }

    input[type="date"],
    input[type="number"],
    input[type="text"],
    input[type="email"],
    input[type="password"] {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 4px;
    }

    button[type="submit"] {
        background-color: #333;
        color: #fff;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s ease, transform 0.3s ease-in-out;
    }

        button[type="submit"]:hover {
            background-color: #555;
            transform: scale(1.05);
        }

    .login {
        background-color: #333;
        color: white;
        padding: 10px 20px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
        margin: 4px 2px;
        cursor: pointer;
        border: none;
        border-radius: 4px;
        transition: background-color 0.3s, transform 0.3s ease-in-out;
    }

        .login:hover {
            background-color: #555;
            transform: scale(1.05);
        }

    .input-group > .form-control {
        flex: none;
        float: right;
    }

    .container .backHome {
        color: #333;
        text-decoration: none;
        font-weight: 500;
        display: inline-block;
        position: relative;
    }

        .container .backHome:after {
            background: none repeat scroll 0 0 transparent;
            bottom: 0;
            content: "";
            display: block;
            height: 2px;
            left: 50%;
            position: absolute;
            background: #333;
            transition: width 0.4s ease 0s, left 0.4s ease 0s;
            width: 0;
        }

        .container .backHome:hover:after {
            width: 100%;
            left: 0;
        }

    form {
        padding: 60px;
    }

    .gender-group {
        display: flex;
    }

    .gender {
        height: 20px;
        width: 30px !important;
        margin-left: 30px;
    }
</style>

<div style="margin-top: 200px;">
    <h1>Đổi Mật Khẩu</h1>

    <EditForm Model="@passwordChangeModel" OnValidSubmit="HandleSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="input-group">
            <label for="currentPassword">Mật Khẩu Hiện Tại:</label>
            <InputText id="currentPassword" class="form-control rounded-4" @bind-Value="passwordChangeModel.CurrentPassword" type="password" />
        </div>
        <div class="input-group">
            <label for="newPassword">Mật Khẩu Mới:</label>
            <InputText id="newPassword" class="form-control rounded-4" @bind-Value="passwordChangeModel.NewPassword" type="password" />
        </div>
        <div class="input-group">
            <label for="confirmNewPassword">Xác Nhận Mật Khẩu Mới:</label>
            <InputText id="confirmNewPassword" class="form-control rounded-4" @bind-Value="passwordChangeModel.ConfirmNewPassword" type="password" />
        </div>
        <button type="submit" class="btn btn-primary">Đổi Mật Khẩu</button>
        <a class="btn btn-secondary" href="/">Trở về trang chủ</a>
    </EditForm>

    <div class="toast-container position-fixed bottom-0 end-0 p-3">
        <div class="toast fade" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header">
                <strong class="me-auto">Thông báo</strong>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body">
                @toastMessage
            </div>
        </div>
    </div>
</div>

@code {
    private ChangePasswordRequest passwordChangeModel = new ChangePasswordRequest();
    private string toastMessage = string.Empty;

    private async Task HandleSubmit()
    {
        var userName = Auth.Username;
        // Send the change password request to the server
        var response = await http.PostAsJsonAsync($"api/Account/change-password?username={userName}", passwordChangeModel);
        if (response.IsSuccessStatusCode)
        {
            toastMessage = "Mật khẩu đã được đổi thành công.";
            ShowToast();
            Task.Delay(1000);
            await JS.InvokeVoidAsync("localStorage.removeItem", "authToken");
            Auth.IsLoggedIn = false;
            Auth.Username = null;
            Task.Delay(1000);

            Navigation.NavigateTo("/login");

        }
        else
        {
            var errorResponse = await response.Content.ReadFromJsonAsync<ErrorResponse>();
            toastMessage = errorResponse?.Message ?? "Đã xảy ra lỗi khi đổi mật khẩu.";
            ShowToast();
        }
    }

    private async void ShowToast()
    {
        await JS.InvokeVoidAsync("eval", "var toastElement = document.querySelector('.toast'); var toast = new bootstrap.Toast(toastElement); toast.show();");
    }

    public class ChangePasswordRequest
    {
        public string CurrentPassword { get; set; }
        public string NewPassword { get; set; }
        public string ConfirmNewPassword { get; set; }
    }

    public class ErrorResponse
    {
        public string Message { get; set; }
    }
}
